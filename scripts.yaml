# this one does the hard work of sending the comment to the device.  list each one of your echo devices after the for_each line
comment_for_everything_devices:
  sequence:
    - repeat:
        for_each:
          - media_player.echo_show_5
          - media_player.onelink_safe_sound
          - media_player.fire_tv
        sequence:
          - condition: template
            value_template: "{{ states('input_select.comment_for_everything') != '' }}"
          - service: notify.alexa_media
            data_template:
              message: >-
                <say-as interpret-as="interjection">{{
                states('input_select.comment_for_everything') }}</say-as>
              data:
                type: tts
              target: "{{ repeat.item }}"
# this script will pick a RANDOM COMMENT from the dropdown.  The automation.comment_for_everything will pick it up and send it to the script above.
comment_for_everything:
  sequence:
  - service: input_select.select_option
    target:
      entity_id: input_select.comment_for_everything
    data:
      option: "{{ state_attr('input_select.comment_for_everything', 'options')\n    | reject('eq',\
        \ states('input_select.test'))\n    | list | random }}\n"
# this script is for anything you type into the text box. again list each echo device you'd like to hear
alexa_comment:
  alias: another Comment for Everything script
  sequence:
    - repeat:
        for_each:
          - media_player.echo_show_5
          - media_player.onelink_safe_sound
          - media_player.fire_tv
        sequence:
          - condition: template
            value_template: "{{ states('input_text.alexa_comment') != '' }}"
          - service: notify.alexa_media
            data_template:
              message: >-
                <say-as interpret-as="interjection">{{
                states('input_text.alexa_comment') }}</say-as>
              data:
                type: tts
              target: "{{ repeat.item }}"